@use "utils/vars.scss" as *;


// CSS Reset

* { box-sizing: border-box; }

ul, ol {
    list-style: none;
    padding: 0;
}

a {
    text-decoration: none;
    color: inherit;
}

img {
    display: block;
}

body {
    margin: 0;
}

button {
    border: inherit;
    background-color: inherit;
    font-family: inherit;
    font-size: inherit;
    color: inherit;
}

section {

    & > .wrapper {
        padding: var(--sec-p-y) var(--sec-p-x);
    }

    &:first-of-type > .wrapper {
        padding-top: var(--header-top-height);
    }

    &.progress:first-child > .wrapper {
        padding-top: calc(var(--header-top-height) + var(--sec-p-y));
    }

    & > .wrapper.progress + .wrapper.imgWrapper {
        background: linear-gradient(to bottom, $primary 0%, $primary 20%, transparent 20%, transparent 100%);
    }

    & > .wrapper + .wrapper {
        padding-top: 0;
    }
}

section:has(h2 + .input) h2 {
    text-align: center;
    margin-bottom: calc(var(--sec-p-y) * 0.5);
}



// Backgorunds

@each $color-name, $hex in $bg-colors {
    .bg-#{"#{$color-name}"} {
        background-color: $hex;
    }
}


// Fonts

body {
    font-family: "roc-grotesk", sans-serif;
    line-height: 1.5;

    font-size: var(--fs-base);
}

h1 {
    font-size: var(--fs-h1);
    font-weight: 400;
}

h2 {
    font-size: var(--fs-h2);
    font-weight: 400;
    width: 100%;
}

h3 {
    font-size: var(--fs-h3);
    font-weight: 400;
}

svg {
    width: var(--icon-size-svg);
    height: var(--icon-size-svg);
}

// Inputs

input, button, a {
    cursor: pointer;
}

input {
    font-family: inherit;
    font-size: inherit;
    appearance: none;
    border: none;
    border-radius: inherit;
    outline: none;
}

.input {
    display: flex;
    align-items: center;

    cursor: pointer;
    
    background-color: $white;
    border-radius: var(--btn-radius);
    padding: var(--btn-p-x) var(--btn-p-y);

    border: var(--btn-border-width) solid $light;

    transition: all $fast $bezier;

    input { outline: none; width: 100%; }

    & + .input {
        margin-top: var(--sp-md);
    }
    
    &:checked, &:has(input:checked), &:focus, &:has(input:focus) {
        border: var(--btn-border-width) solid $primary;
        cursor: initial;
    }
}

// Input sizes
.wrapper:has(.input--33, .input--50) {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sp-md);


    .input {
        margin-top: 0;
        width: 100%;

        &--50 { 
            width: calc(50% - (var(--sp-md) * 0.5));
        }
    }
}

.nav {
    position: fixed;
    width: 100%;
    bottom: 0;

    z-index: 10;

    display: flex;
    justify-content: space-between;
    align-items: center;

    padding: var(--sp-lg);

    backdrop-filter: blur(var(--fs-base));
    background-color: #ffffffa9;

    .btn svg {
        display: none;
    }
}

.imgWrapper {

    &:has(h2) {
        display: flex;
        align-items: center;
        justify-content: center;

        h2 {
            position: absolute;
            z-index: 1;
            color: $white;

            font-size: 100px;
            font-weight: 500;
        }
    }

    img {
        width: 100%;
        border-radius: var(--btn-radius);
    }
}


@media (min-width : $bp-lg) {
    .input {
        &:hover {
            border: var(--btn-border-width) solid $primary;
        }
    }

    // Input sizes
    .wrapper:has(.input--33, .input--50) {
        .input--33 { 
            width: calc(33.33% - (var(--sp-md) * 0.6666));
        }
    }

    .nav {
        position: relative;
        padding-left: var(--sec-p-x);
        padding-right: var(--sec-p-x);

        .btn  {

            position: relative;

            svg {
                display: block;
                position: absolute;
                margin-top: -.25rem;

                opacity: 0;

                transition: all $fast $bezier;
            }

            &:hover svg {
                opacity: 1;
                transform: translateX(0)!important;
            }

            &:first-child {
                svg { 
                    left: var(--btn-p-x); 
                    transform: translateX(calc(var(--btn-p-x) * -1)); 
                }

                &:hover {
                    padding-left: calc(var(--btn-p-x) + var(--icon-size-svg) * 1.5);
                }
            }

            &:last-child {
                svg { 
                    right: var(--btn-p-x);
                    transform: translateX(var(--btn-p-x)); 
                }

                &:hover {
                    padding-right: calc(var(--btn-p-x) + var(--icon-size-svg) * 1.5);
                }
            }
        }
    }

    section:has(h2 + .input) h2 {
        font-size: var(--fs-h1);
        font-weight: 500;   
    }
}